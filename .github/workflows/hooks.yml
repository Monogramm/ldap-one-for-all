
name: Docker Image CI

on:
  pull_request:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    branches:
      - main
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: ['debian', 'alpine']

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Execute CI build hooks
        id: docker_build
        run: |
          # Export variables to tag against GitHub Container Registry
          #export DOCKER_REGISTRY=ghcr.io
          #export DOCKER_REPO=${{ github.repository }}

          export DOCKER_TAG=${SOURCE_TAG:-$SOURCE_BRANCH}
          if "${SOURCE_BRANCH}" == "main" || "${SOURCE_BRANCH}" == "master" ; then
            export DOCKER_TAG=latest
            echo "latest ${{ matrix.variant }} " > .dockertags
          elif "${{ matrix.variant }}" == "alpine" ; then
            echo "${DOCKER_TAG} ${DOCKER_TAG}-${{ matrix.variant }} " > .dockertags
          else "${SOURCE_BRANCH}" == "main" || "${SOURCE_BRANCH}" == "master" ; then
            echo "${DOCKER_TAG}-${{ matrix.variant }} " > .dockertags
          fi
          cat .dockertags

          export EXPORT_TESTS_RESULTS=true
          ./hooks/run build ${{ matrix.variant }} 'fpm'
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}

      - name: Display docker images
        run: docker images

      - name: Execute CI test hooks
        id: docker_test
        run: |
          export EXPORT_TESTS_RESULTS=true
          ./hooks/run test ${{ matrix.variant }} 'fpm'
          ls -al ./coverage

      - name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@0.2.0
        continue-on-error: true
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./coverage/coverage-phpunit-cobertura.xml

      - name: Execute CI push hooks
        id: docker_push
        if: ${{ github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith( github.ref, 'refs/tags/') }}
        run: |
          # Export variables to login and push to GitHub Container Registry
          #export DOCKER_REGISTRY=ghcr.io
          #export DOCKER_LOGIN=${{ github.repository_owner }}
          #export DOCKER_PASSWORD=${{ secrets.GITHUB_REGISTRY_TOKEN }}
          #./hooks/run push
          # Export variables to login and push to DockerHub Registry
          export DOCKER_LOGIN=${{ secrets.DOCKERHUB_REGISTRY_LOGIN }}
          export DOCKER_PASSWORD=${{ secrets.DOCKERHUB_REGISTRY_TOKEN }}
          ./hooks/run push ${{ matrix.variant }}
