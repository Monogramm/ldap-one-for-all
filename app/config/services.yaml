# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    env(MAILER_DSN): 'smtp://localhost:25'
    env(MAILER_ENABLED): 'false'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $mailerFrom: '%env(MAILER_FROM)%'
            $publicUploadsDir: '%kernel.project_dir%/public/uploads/media'
            $publicUploadsPath: 'uploads/media'
            $publicUrl: '%env(SF_SERVER_PUBLIC_URL)%'
            $ldapConfig:
                enabled:
                    '%env(resolve:LDAP_AUTH_ENABLED)%'
                uid_key:
                    '%env(resolve:LDAP_AUTH_USERNAME_ATTRIBUTE)%'
                mail_key:
                    '%env(resolve:LDAP_AUTH_EMAIL_ATTRIBUTE)%'
                base_dn:
                    '%env(resolve:LDAP_AUTH_BASE_DN)%'
                is_ad:
                    '%env(resolve:LDAP_AUTH_IS_AD)%'
                ad_domain:
                    '%env(resolve:LDAP_AUTH_AD_DOMAIN)%'
                query:
                    '%env(resolve:LDAP_AUTH_USER_QUERY)%'
                search_dn:
                    '%env(resolve:LDAP_BIND_DN)%'
                search_password:
                    '%env(resolve:LDAP_BIND_SECRET)%'
                group_base_dn:
                    '%env(resolve:LDAP_GROUP_BASE_DN)%'
                group_query:
                    '%env(resolve:LDAP_GROUP_QUERY)%'
                group_key:
                    '%env(resolve:LDAP_GROUP_ATTRIBUTE)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    App\EventListener\LocaleListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 128 }

    jwt_encoder:
        class: App\Service\JWTEncoder

    App\Service\Encryptor:
        arguments:
            $key: '%env(resolve:ENCRYPTOR_KEY)%'

    PayPalCheckoutSdk\Core\PayPalHttpClient:
        factory: [ '@App\Service\Paypal\Checkout\ClientFactory', create ]
        arguments: [
                '%env(resolve:PAYPAL_CLIENT_ENV)%',
                '%env(resolve:PAYPAL_CLIENT_ID)%',
                '%env(resolve:PAYPAL_CLIENT_SECRET)%'
        ]

    Symfony\Component\Ldap\Adapter\ExtLdap\Adapter:
        arguments:
            -   host: '%env(resolve:LDAP_AUTH_HOST)%'
                port: '%env(resolve:LDAP_AUTH_PORT)%'
                encryption: '%env(resolve:LDAP_AUTH_ENCRYPTION)%'
                options:
                    protocol_version: 3
                    referrals: false

    Symfony\Component\Ldap\Ldap:
        arguments: [ '@Symfony\Component\Ldap\Adapter\ExtLdap\Adapter' ]

    App\Service\Ldap\Client:
        arguments:
            $ldap: '@Symfony\Component\Ldap\Ldap'

    Prometheus\CollectorRegistry: '@prometheus_metrics_bundle.collector_registry'
